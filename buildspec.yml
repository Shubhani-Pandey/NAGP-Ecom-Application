version: 0.2
phases:
  pre_build:
    commands:

      - aws --version
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 816069131853.dkr.ecr.eu-north-1.amazonaws.com
      - echo Setting Repo URI...
      - REPOSITORY_URI=816069131853.dkr.ecr.eu-north-1.amazonaws.com/ecom/ecom_backend
      - echo declaring image tag
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image... 
      - docker-compose build   
      - echo Listing Docker images...
      - docker images      
      - docker tag $REPOSITORY_URI:user-service_latest  $REPOSITORY_URI:user-service_$IMAGE_TAG
      - docker tag $REPOSITORY_URI:product-service_latest  $REPOSITORY_URI:product-service_$IMAGE_TAG
      - docker tag $REPOSITORY_URI:order-service_latest  $REPOSITORY_URI:order-service_$IMAGE_TAG
      - docker tag $REPOSITORY_URI:cart-service_latest $REPOSITORY_URI:cart-service_$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker-compose push
      - echo Listing Docker images after push...
      - docker images
      - echo Writing image definitions file...
      - |
        printf '[
          {
            "name": "usercontainer",
            "imageUri": "%s"
          }
        ]' \
        "$REPOSITORY_URI:user-service_latest" > user_image_definitions.json
      - cat user_image_definitions.json
      - |
        printf '[
          {
            "name": "cartcontainer",
            "imageUri": "%s"
          }
        ]' \
        "$REPOSITORY_URI:cart-service_latest" > cart_image_definitions.json
      - cat cart_image_definitions.json
      - |
        printf '[
          {
            "name": "ordercontainer",
            "imageUri": "%s"
          }
        ]' \
        "$REPOSITORY_URI:order-service_latest" > order_image_definitions.json
      - cat order_image_definitions.json
      - |
        printf '[
          {
            "name": "productcontainer",
            "imageUri": "%s"
          }
        ]' \
        "$REPOSITORY_URI:product-service_latest" > product_image_definitions.json
      - cat product_image_definitions.json
artifacts:
  files: 
    - user_image_definitions.json
    - order_image_definitions.json
    - product_image_definitions.json
    - cart_image_definitions.json